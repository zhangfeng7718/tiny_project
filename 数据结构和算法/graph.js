// 多对多的数据结构图      其中一对一 就是哈希表  一对多就是树
// 分为无向图 和 有向图
// 有向图的两个概念 入度和出度
// 完全图  稀疏图  稠密图  连通图
// 完全图   图中的各个顶点都与除了自己以外的其他顶点有关系  这样的无向图叫做完全图
// 这样的有向图被成为有向完全有向图
// 无向图中如果任意两个顶点之间都能连通   那么就是连通图
// 有向图中若有任意两个顶点Vi Vj 连通  那么就是一个强连通图

// 生成树就是对连通图进行遍历  (可能会产生多种不同的情况)
// 需要满足的条件 1. 包含连通图中的所有顶点  2. 任意两顶点之间有且只有一条通路
// 生成树中的边的数量 = 顶点数 - 1
// 非连通图对应的树 是多个树  被叫做 生成森林

// 图的结构实现  使用一个一维数组表示 顶点的值   用一个二维数组表示顶点和顶点之间的关系
// 对于无向图  二位数组构建的矩阵是对称的  可以取上三角或者下三角即可
// 出度为 对应行的非0的和
// 入度为 对应列的非0的和

// 采用链表存储的图   具体的存储方法有3种   邻接表， 邻接多重表，十字链表
